Part 1

[스프링 개발 환경 구축]

	01 개발을 위한 준비
	--------------------------------
	
	1.1 개발 환경 설정
	1.2 스프링 프로젝트 생성
	1.3 Tomcat을 이용한 프로젝트 실행 확인
	1.4 Lombok라이브러리 설치
	1.5 Java Configuration을 하는 경우

	02 스프링의 특징과 의존성 주입
	--------------------------------
	2.1 스프링 프레임워크의 간략한 역사
	
	2.2 의존성 주입 테스트
	
		구현방식 : 생성자 주입, setter 주입
		설정방식 : XML, 어노테이션
		
		pom.xml에 라이브러리 추가/변경
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.24</version>
		    <scope>provided</scope>
		</dependency>	
	
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		<!--<version>1.2.15</version>-->
			<version>1.2.17</version>
						.
						.
		</dependency>
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!--<version>4.7</version>-->
			    <version>4.12</version>
			<scope>test</scope>
		</dependency>        	
	
	
		2.2.1 어노테이션을 이용하는 의존성 주입 설정
			org.zerock.sample 패키지 생성
			Restaurant, Chef 클래스 생성
			
		
		2.2.2 XML을 이용하는 의존성 주입 설정
			빈(Bean)에 대한 설정을 XML로
			src/main/webapp/WEB-INF/spring/root-context.xml
			Namespace탭 'context'라는 항목 체크
			Source 탭 선택 코드 추가
			<context:component-scan base-package="org.zerock.sample">
			</context:component-scan>
			Bean Graph 탭을 선택 Restaurant, Chef 객체가 설정
	
		2.2.3 Java 설정을 이용하는 의존성 주입
		 	root-context.xml 을 java 객체로 대신한다
		 	org.zerock.config
		 	RootConfig.java, WebConfig.java
		 	
	
	
	
	2.3 스프링이 동작하면서 생기는 일
	2.4 스프링 4.3이후 단일 생성자의 묵시적 자동주입
	
	03 스프링과 Oracle Database 연동
	--------------------------------
	3.1 오라클 설치
	3.2 Sql Developer 설치
	3.3 프로젝트의 JDBC연결
	3.4 커넥션 풀 설정

	04 MyBatis와 스프링 연동
	--------------------------------
	4.1 MyBatis
	4.2 스프링과의 연동 처리
	4.3 log4jdbc-log4j2 설정
	





Part 2
[스프링 MVC 설정]

Part 3
[기본적인 웹 게시물 관리]

Part 4
[REST 방식과 Ajax를 이용하는 댓글 처리]

Part 5
[AOP와 트랜잭션]

Part 6
[파일 업로드 처리]

Part 7
[Spring Web Security를 이용한 로그인 처리]

